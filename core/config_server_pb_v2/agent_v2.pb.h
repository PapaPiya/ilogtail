// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent_v2.proto

#ifndef PROTOBUF_INCLUDED_agent_5fv2_2eproto
#define PROTOBUF_INCLUDED_agent_5fv2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_agent_5fv2_2eproto 

namespace protobuf_agent_5fv2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_agent_5fv2_2eproto
namespace configserver {
namespace protov2 {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class CommandRequest;
class CommandRequestDefaultTypeInternal;
extern CommandRequestDefaultTypeInternal _CommandRequest_default_instance_;
class CommandResponse;
class CommandResponseDefaultTypeInternal;
extern CommandResponseDefaultTypeInternal _CommandResponse_default_instance_;
class Command_ArgsEntry_DoNotUse;
class Command_ArgsEntry_DoNotUseDefaultTypeInternal;
extern Command_ArgsEntry_DoNotUseDefaultTypeInternal _Command_ArgsEntry_DoNotUse_default_instance_;
class HeartBeatRequest;
class HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatResponse;
class HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
}  // namespace protov2
}  // namespace configserver
namespace google {
namespace protobuf {
template<> ::configserver::protov2::Command* Arena::CreateMaybeMessage<::configserver::protov2::Command>(Arena*);
template<> ::configserver::protov2::CommandRequest* Arena::CreateMaybeMessage<::configserver::protov2::CommandRequest>(Arena*);
template<> ::configserver::protov2::CommandResponse* Arena::CreateMaybeMessage<::configserver::protov2::CommandResponse>(Arena*);
template<> ::configserver::protov2::Command_ArgsEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::protov2::Command_ArgsEntry_DoNotUse>(Arena*);
template<> ::configserver::protov2::HeartBeatRequest* Arena::CreateMaybeMessage<::configserver::protov2::HeartBeatRequest>(Arena*);
template<> ::configserver::protov2::HeartBeatResponse* Arena::CreateMaybeMessage<::configserver::protov2::HeartBeatResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace configserver {
namespace protov2 {

enum RespCode {
  ACCEPT = 0,
  INVALID_PARAMETER = 1,
  INTERNAL_SERVER_ERROR = 2,
  RespCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RespCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RespCode_IsValid(int value);
const RespCode RespCode_MIN = ACCEPT;
const RespCode RespCode_MAX = INTERNAL_SERVER_ERROR;
const int RespCode_ARRAYSIZE = RespCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RespCode_descriptor();
inline const ::std::string& RespCode_Name(RespCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RespCode_descriptor(), value);
}
inline bool RespCode_Parse(
    const ::std::string& name, RespCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RespCode>(
    RespCode_descriptor(), name, value);
}
// ===================================================================

class Command_ArgsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Command_ArgsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Command_ArgsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Command_ArgsEntry_DoNotUse();
  Command_ArgsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Command_ArgsEntry_DoNotUse& other);
  static const Command_ArgsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Command_ArgsEntry_DoNotUse*>(&_Command_ArgsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.protov2.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(NULL);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> args = 4;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      args() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_args();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:configserver.protov2.Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Command_ArgsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > args_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.protov2.HeartBeatRequest) */ {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatRequest(HeartBeatRequest&& from) noexcept
    : HeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartBeatRequest& operator=(HeartBeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HeartBeatRequest* other);
  friend void swap(HeartBeatRequest& a, HeartBeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatRequest* New() const final {
    return CreateMaybeMessage<HeartBeatRequest>(NULL);
  }

  HeartBeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string running_status = 1;
  void clear_running_status();
  static const int kRunningStatusFieldNumber = 1;
  const ::std::string& running_status() const;
  void set_running_status(const ::std::string& value);
  #if LANG_CXX11
  void set_running_status(::std::string&& value);
  #endif
  void set_running_status(const char* value);
  void set_running_status(const char* value, size_t size);
  ::std::string* mutable_running_status();
  ::std::string* release_running_status();
  void set_allocated_running_status(::std::string* running_status);

  // @@protoc_insertion_point(class_scope:configserver.protov2.HeartBeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr running_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.protov2.HeartBeatResponse) */ {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatResponse(HeartBeatResponse&& from) noexcept
    : HeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartBeatResponse& operator=(HeartBeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HeartBeatResponse* other);
  friend void swap(HeartBeatResponse& a, HeartBeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatResponse* New() const final {
    return CreateMaybeMessage<HeartBeatResponse>(NULL);
  }

  HeartBeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.protov2.Command custom_commands = 3;
  int custom_commands_size() const;
  void clear_custom_commands();
  static const int kCustomCommandsFieldNumber = 3;
  ::configserver::protov2::Command* mutable_custom_commands(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::protov2::Command >*
      mutable_custom_commands();
  const ::configserver::protov2::Command& custom_commands(int index) const;
  ::configserver::protov2::Command* add_custom_commands();
  const ::google::protobuf::RepeatedPtrField< ::configserver::protov2::Command >&
      custom_commands() const;

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .configserver.protov2.RespCode code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::configserver::protov2::RespCode code() const;
  void set_code(::configserver::protov2::RespCode value);

  // @@protoc_insertion_point(class_scope:configserver.protov2.HeartBeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::protov2::Command > custom_commands_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.protov2.CommandRequest) */ {
 public:
  CommandRequest();
  virtual ~CommandRequest();

  CommandRequest(const CommandRequest& from);

  inline CommandRequest& operator=(const CommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandRequest(CommandRequest&& from) noexcept
    : CommandRequest() {
    *this = ::std::move(from);
  }

  inline CommandRequest& operator=(CommandRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandRequest* internal_default_instance() {
    return reinterpret_cast<const CommandRequest*>(
               &_CommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CommandRequest* other);
  friend void swap(CommandRequest& a, CommandRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandRequest* New() const final {
    return CreateMaybeMessage<CommandRequest>(NULL);
  }

  CommandRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandRequest& from);
  void MergeFrom(const CommandRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Struct request_body = 1;
  bool has_request_body() const;
  void clear_request_body();
  static const int kRequestBodyFieldNumber = 1;
  private:
  const ::google::protobuf::Struct& _internal_request_body() const;
  public:
  const ::google::protobuf::Struct& request_body() const;
  ::google::protobuf::Struct* release_request_body();
  ::google::protobuf::Struct* mutable_request_body();
  void set_allocated_request_body(::google::protobuf::Struct* request_body);

  // @@protoc_insertion_point(class_scope:configserver.protov2.CommandRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Struct* request_body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.protov2.CommandResponse) */ {
 public:
  CommandResponse();
  virtual ~CommandResponse();

  CommandResponse(const CommandResponse& from);

  inline CommandResponse& operator=(const CommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandResponse(CommandResponse&& from) noexcept
    : CommandResponse() {
    *this = ::std::move(from);
  }

  inline CommandResponse& operator=(CommandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandResponse* internal_default_instance() {
    return reinterpret_cast<const CommandResponse*>(
               &_CommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CommandResponse* other);
  friend void swap(CommandResponse& a, CommandResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandResponse* New() const final {
    return CreateMaybeMessage<CommandResponse>(NULL);
  }

  CommandResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandResponse& from);
  void MergeFrom(const CommandResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .google.protobuf.Struct response_body = 3;
  bool has_response_body() const;
  void clear_response_body();
  static const int kResponseBodyFieldNumber = 3;
  private:
  const ::google::protobuf::Struct& _internal_response_body() const;
  public:
  const ::google::protobuf::Struct& response_body() const;
  ::google::protobuf::Struct* release_response_body();
  ::google::protobuf::Struct* mutable_response_body();
  void set_allocated_response_body(::google::protobuf::Struct* response_body);

  // .configserver.protov2.RespCode code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::configserver::protov2::RespCode code() const;
  void set_code(::configserver::protov2::RespCode value);

  // @@protoc_insertion_point(class_scope:configserver.protov2.CommandResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::Struct* response_body_;
  int code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fv2_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Command

// string id = 1;
inline void Command::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::id() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.Command.id)
  return id_.GetNoArena();
}
inline void Command::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.Command.id)
}
#if LANG_CXX11
inline void Command::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.Command.id)
}
#endif
inline void Command::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.Command.id)
}
inline void Command::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.Command.id)
}
inline ::std::string* Command::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.Command.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_id() {
  // @@protoc_insertion_point(field_release:configserver.protov2.Command.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.Command.id)
}

// string type = 2;
inline void Command::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::type() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.Command.type)
  return type_.GetNoArena();
}
inline void Command::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.Command.type)
}
#if LANG_CXX11
inline void Command::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.Command.type)
}
#endif
inline void Command::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.Command.type)
}
inline void Command::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.Command.type)
}
inline ::std::string* Command::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.Command.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_type() {
  // @@protoc_insertion_point(field_release:configserver.protov2.Command.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.Command.type)
}

// string name = 3;
inline void Command::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::name() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.Command.name)
  return name_.GetNoArena();
}
inline void Command::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.Command.name)
}
#if LANG_CXX11
inline void Command::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.Command.name)
}
#endif
inline void Command::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.Command.name)
}
inline void Command::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.Command.name)
}
inline ::std::string* Command::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.Command.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_name() {
  // @@protoc_insertion_point(field_release:configserver.protov2.Command.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.Command.name)
}

// map<string, string> args = 4;
inline int Command::args_size() const {
  return args_.size();
}
inline void Command::clear_args() {
  args_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Command::args() const {
  // @@protoc_insertion_point(field_map:configserver.protov2.Command.args)
  return args_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Command::mutable_args() {
  // @@protoc_insertion_point(field_mutable_map:configserver.protov2.Command.args)
  return args_.MutableMap();
}

// -------------------------------------------------------------------

// HeartBeatRequest

// string running_status = 1;
inline void HeartBeatRequest::clear_running_status() {
  running_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::running_status() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.HeartBeatRequest.running_status)
  return running_status_.GetNoArena();
}
inline void HeartBeatRequest::set_running_status(const ::std::string& value) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.HeartBeatRequest.running_status)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_running_status(::std::string&& value) {
  
  running_status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.HeartBeatRequest.running_status)
}
#endif
inline void HeartBeatRequest::set_running_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.HeartBeatRequest.running_status)
}
inline void HeartBeatRequest::set_running_status(const char* value, size_t size) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.HeartBeatRequest.running_status)
}
inline ::std::string* HeartBeatRequest::mutable_running_status() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.HeartBeatRequest.running_status)
  return running_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_running_status() {
  // @@protoc_insertion_point(field_release:configserver.protov2.HeartBeatRequest.running_status)
  
  return running_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_running_status(::std::string* running_status) {
  if (running_status != NULL) {
    
  } else {
    
  }
  running_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), running_status);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.HeartBeatRequest.running_status)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// .configserver.protov2.RespCode code = 1;
inline void HeartBeatResponse::clear_code() {
  code_ = 0;
}
inline ::configserver::protov2::RespCode HeartBeatResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.HeartBeatResponse.code)
  return static_cast< ::configserver::protov2::RespCode >(code_);
}
inline void HeartBeatResponse::set_code(::configserver::protov2::RespCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:configserver.protov2.HeartBeatResponse.code)
}

// string message = 2;
inline void HeartBeatResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.HeartBeatResponse.message)
  return message_.GetNoArena();
}
inline void HeartBeatResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.HeartBeatResponse.message)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.HeartBeatResponse.message)
}
#endif
inline void HeartBeatResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.HeartBeatResponse.message)
}
inline void HeartBeatResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.HeartBeatResponse.message)
}
inline ::std::string* HeartBeatResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.HeartBeatResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.protov2.HeartBeatResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.HeartBeatResponse.message)
}

// repeated .configserver.protov2.Command custom_commands = 3;
inline int HeartBeatResponse::custom_commands_size() const {
  return custom_commands_.size();
}
inline void HeartBeatResponse::clear_custom_commands() {
  custom_commands_.Clear();
}
inline ::configserver::protov2::Command* HeartBeatResponse::mutable_custom_commands(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.protov2.HeartBeatResponse.custom_commands)
  return custom_commands_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::protov2::Command >*
HeartBeatResponse::mutable_custom_commands() {
  // @@protoc_insertion_point(field_mutable_list:configserver.protov2.HeartBeatResponse.custom_commands)
  return &custom_commands_;
}
inline const ::configserver::protov2::Command& HeartBeatResponse::custom_commands(int index) const {
  // @@protoc_insertion_point(field_get:configserver.protov2.HeartBeatResponse.custom_commands)
  return custom_commands_.Get(index);
}
inline ::configserver::protov2::Command* HeartBeatResponse::add_custom_commands() {
  // @@protoc_insertion_point(field_add:configserver.protov2.HeartBeatResponse.custom_commands)
  return custom_commands_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::protov2::Command >&
HeartBeatResponse::custom_commands() const {
  // @@protoc_insertion_point(field_list:configserver.protov2.HeartBeatResponse.custom_commands)
  return custom_commands_;
}

// -------------------------------------------------------------------

// CommandRequest

// .google.protobuf.Struct request_body = 1;
inline bool CommandRequest::has_request_body() const {
  return this != internal_default_instance() && request_body_ != NULL;
}
inline const ::google::protobuf::Struct& CommandRequest::_internal_request_body() const {
  return *request_body_;
}
inline const ::google::protobuf::Struct& CommandRequest::request_body() const {
  const ::google::protobuf::Struct* p = request_body_;
  // @@protoc_insertion_point(field_get:configserver.protov2.CommandRequest.request_body)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* CommandRequest::release_request_body() {
  // @@protoc_insertion_point(field_release:configserver.protov2.CommandRequest.request_body)
  
  ::google::protobuf::Struct* temp = request_body_;
  request_body_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* CommandRequest::mutable_request_body() {
  
  if (request_body_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArenaNoVirtual());
    request_body_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.protov2.CommandRequest.request_body)
  return request_body_;
}
inline void CommandRequest::set_allocated_request_body(::google::protobuf::Struct* request_body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_body_);
  }
  if (request_body) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(request_body)->GetArena();
    if (message_arena != submessage_arena) {
      request_body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_body, submessage_arena);
    }
    
  } else {
    
  }
  request_body_ = request_body;
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.CommandRequest.request_body)
}

// -------------------------------------------------------------------

// CommandResponse

// .configserver.protov2.RespCode code = 1;
inline void CommandResponse::clear_code() {
  code_ = 0;
}
inline ::configserver::protov2::RespCode CommandResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.CommandResponse.code)
  return static_cast< ::configserver::protov2::RespCode >(code_);
}
inline void CommandResponse::set_code(::configserver::protov2::RespCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:configserver.protov2.CommandResponse.code)
}

// string message = 2;
inline void CommandResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.protov2.CommandResponse.message)
  return message_.GetNoArena();
}
inline void CommandResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.protov2.CommandResponse.message)
}
#if LANG_CXX11
inline void CommandResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.protov2.CommandResponse.message)
}
#endif
inline void CommandResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.protov2.CommandResponse.message)
}
inline void CommandResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.protov2.CommandResponse.message)
}
inline ::std::string* CommandResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.protov2.CommandResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.protov2.CommandResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.CommandResponse.message)
}

// .google.protobuf.Struct response_body = 3;
inline bool CommandResponse::has_response_body() const {
  return this != internal_default_instance() && response_body_ != NULL;
}
inline const ::google::protobuf::Struct& CommandResponse::_internal_response_body() const {
  return *response_body_;
}
inline const ::google::protobuf::Struct& CommandResponse::response_body() const {
  const ::google::protobuf::Struct* p = response_body_;
  // @@protoc_insertion_point(field_get:configserver.protov2.CommandResponse.response_body)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
inline ::google::protobuf::Struct* CommandResponse::release_response_body() {
  // @@protoc_insertion_point(field_release:configserver.protov2.CommandResponse.response_body)
  
  ::google::protobuf::Struct* temp = response_body_;
  response_body_ = NULL;
  return temp;
}
inline ::google::protobuf::Struct* CommandResponse::mutable_response_body() {
  
  if (response_body_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArenaNoVirtual());
    response_body_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.protov2.CommandResponse.response_body)
  return response_body_;
}
inline void CommandResponse::set_allocated_response_body(::google::protobuf::Struct* response_body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(response_body_);
  }
  if (response_body) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(response_body)->GetArena();
    if (message_arena != submessage_arena) {
      response_body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_body, submessage_arena);
    }
    
  } else {
    
  }
  response_body_ = response_body;
  // @@protoc_insertion_point(field_set_allocated:configserver.protov2.CommandResponse.response_body)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protov2
}  // namespace configserver

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::configserver::protov2::RespCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::protov2::RespCode>() {
  return ::configserver::protov2::RespCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_agent_5fv2_2eproto
